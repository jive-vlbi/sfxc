################################################## 
# Notification_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from Notification_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class NotificationLocator:
    NotificationPortType_address = "http://melisa.man.poznan.pl:8080/axis2/services/Notification"
    def getNotificationPortTypeAddress(self):
        return NotificationLocator.NotificationPortType_address
    def getNotificationPortType(self, url=None, **kw):
        return NotificationSOAP11BindingSOAP(url or NotificationLocator.NotificationPortType_address, **kw)

# Methods
class NotificationSOAP11BindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: chunkIsReady
    def chunkIsReady(self, request):
        if isinstance(request, chunkIsReadyMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:chunkIsReady", **kw)
        # no output wsaction
        response = self.binding.Receive(chunkIsReadyResponseMessage.typecode)
        return response

chunkIsReadyMessage = ns0.chunkIsReady_Dec().pyclass

chunkIsReadyResponseMessage = ns0.chunkIsReadyResponse_Dec().pyclass
