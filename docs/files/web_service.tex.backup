\section{Web Service}\label{webservice}

This document is not about explaining the details of WSDL, SOAP, ZSI package etc. 
Please see references to see a list of documentation on these items.
We assume that ZSI package is installed and we aim on writing a web service and a client 
starting from a WSDL file.


\subsection{Generating the consumer (client)}\label{client}

Given the WSDL file the code outline is generated by using the wsdl2py and wsdl2dispatch 
tools that are included in ZSI package. As a first step invoke the following command to 
generate the client interface code:

\verb|  wsdl2py -bf file.wsdl|

Here "-b" is shorthand for "--complexType" and "-f" is for "--file". 
(To get the full list of options: wsdl2py --help). The above command will generate 
two files in the current working directory. Those files will be named after the WSDL definition name.

i.e., if the definition name is defined as: 

\verb|  <definition name='SampleService'>|

in the WSDL file than the resulting two file names will be:

\begin{enumerate}
  \item \textbf{Sample\_services.py} that contains a consumer stub. In particular, it contains:
    \begin{itemize}
      \item a Locator class. An instance of this class can be used to create an instance of a
binding through which the service can be invoked.
      \item a class for each operation that can be invoked on the server. This can be used to
construct a message to be sent to the server.
    \end{itemize}
  \item \textbf{Sample\_services\_types.py} that contains various helper classes associated
with the types defined in the WSDL.

\end{enumerate}

The -complexType parameter causes wsdl2py to generate helper methods (getters, setters
and factory methods) for each complex type in the WSDL.


\subsection{Generating the Server}\label{server}

To create the basic code for a server, the following command should then be run. Note that
wsdl2py needs to be run first.

\verb|  wsdl2dispatch --extended --file file.wsdl|

This creates the file: Sample\_services\_server.py that contains a framework for the server.








